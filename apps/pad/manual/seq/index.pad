{block}
  <p>The sequence sub-system of PAD, many many ways to get a sequence of numbers.</p>
{/block}

<hr>


<h3>Concepts</h3>

{block}

<p>There are 6 Sequence concepts

<table border=1>
<tr><td>sequences</td><td>Something that defines a sequence list</td></tr>
<tr><td>options</td><td>Options control aspects of a sequence list</td></tr>
<tr><td>store</td><td>A stored sequence list</td></tr>
<tr><td>operations</td><td>A seq executed on a seqence list entry</td></tr>
<tr><td>actions</td><td>An operation executed on a sequence list</td></tr>
<tr><td>ones</td><td>An action that reduces a sequence list to a single value</td></tr>
</table>

{/block}



<h3>Sequences</h3>

{block}

A seq defines a list of items that are together a sequence list.<br>
in below 3 examples range/even/prime are sequences.

{table}
{demo}{seq range='20..30'} {$range} {/seq}{/demo}
{demo}{seq even, rows=10}  {$even}  {/seq}{/demo}
{demo}{seq prime, rows=10} {$prime} {/seq}{/demo}
{/table}

{/block}


<h3>Options</h3>

{block}

Options control aspects of a sequence list, <br>
in below 2 examples from/to/rows/random/max are options.

{table}
{demo}{seq even, from=20, to=30 }
  {$seq} 
{/seq}{/demo}
{demo}{seq power=2, rows=3, random, from=8, to=16 }
  {$seq} 
{/seq}{/demo}
{/table}

{/block}



<h3>Stores</h3>

{block}

Stores are stored sequence lists in below example, mySeq is a store.

{table}
{demo}{seq range='20..30', store='mySeq'} {/demo}
{demo}{seq mySeq} 
  {$mySeq} 
{/seq}{/demo}
{/table}

{/block}



<h3>Operations</h3>

{block}

Operations are a sequence that is executed on a sequence list entry when building the list<br>
in below 2 examples even/add are operations.

{table}
{demo}{seq range='20..30', store='mySeq'} {/demo}
{demo}{seq mySeq, even} 
  {$mySeq} 
{/seq}{/demo}
{demo}{seq mySeq, add=5} 
  {$mySeq} 
{/seq}{/demo}
{/table}

{/block}



<h3>Actions</h3>

{block}

Actions operate on a sequence list after the list is build,<br>
in below 2 examples shuffle/reverse are actions.

{table}
{demo}{seq range='20..30', store='mySeq'} {/demo}
{demo}{seq mySeq, shuffle} 
  {$mySeq} 
{/seq}{/demo}
{demo}{seq mySeq, reverse} 
  {$mySeq} 
{/seq}{/demo}
{/table}

{/block}



<h3>Ones</h3>{block}

Executing a 'one' on a sequence list will reduce the sequence list to a single value,<br>
in from below 2 examples, first/sum are ones.

{table}
{demo}{seq range='20..30', store='mySeq'} {/demo}
{demo}{seq mySeq, first} 
  {$mySeq} 
{/seq}{/demo}
{demo}{seq mySeq, sum} 
  {$mySeq} 
{/seq}{/demo}
{/table}

{/block}



<h3>operations/actions/one as options</h3>{block}

operations/actions/ones can be added as options to a seq tag

{table}{demo}

{seq loop, from=10, to=20, name='mySeq'}

{/demo}{demo}

{seq mySeq, operation='even'} {$seq} {/seq}

{/demo}{demo}

{seq mySeq, action='shuffle'} {$seq} {/seq}

{/demo}{demo} 

{seq mySeq, one='average'} {$seq} {/seq}

{/demo}

{/table}

{/block}



<h3>Option with parameter</h3>{block}

when an operation/action/one, that is used as an option, has a parameter<br>
use a '|' to give the parameter.

{table}{demo}

{seq '10..20', name='mySeq'}

{/demo}{demo}

{seq mySeq, operation='multiply|10'} {$seq} {/seq}

{/demo}

{/table}

{/block}



<h3>Parameters</h3>{block}

operation/actions/ones can be added as a parameter to a seq tag,<br>
but naming conflicts are possible and then above option way must be used.

{table}{demo}

{seq '10..20', name='mySeq'}

{/demo}{demo}

{seq mySeq, even} {$seq} {/seq}

{/demo}{demo}

{seq mySeq, shuffle} {$seq} {/seq}

{/demo}{demo} 

{seq mySeq, average} {$seq} {/seq}

{/demo}

{/table}

{/block}



<h3>Chain</h3>

{block}operation/actions/ones can be used in a chain.

{table}{demo}

{seq '10..20', even, multiply=10, shuffle, add=2} {$seq} {/seq}

{/demo}

{/table}

{/block}



<h3>Shortcuts</h3>

{block}

  Shortcuts for the loop/list/range sequences

  {table}
    {demo}{seq loop, rows=10}  {$seq} {/seq}{/demo}
    {demo}{seq list='a;b;c'}   {$seq} {/seq}{/demo}
    {demo}{seq range='11..20'} {$seq} {/seq}{/demo}
    {demo}{seq 10}       {$seq} {/seq}{/demo}
    {demo}{seq 'a;b;c'}  {$seq} {/seq}{/demo}
    {demo}{seq '11..20'} {$seq} {/seq}{/demo}
  {/table}

  Shortcuts for sequences

  {table}
    {demo}{golomb rows=10}  {$golomb} {/golomb}{/demo}
    {demo}{prime  rows=10}  {$prime}  {/prime}{/demo}
  {/table}

  Shortcuts for stores

  {table}
    {demo}{seq range='10..20', name='mySeq'}  {/demo}
    {demo}{mySeq} {$mySeq} {/mySeq}{/demo}
  {/table}

{/block}


<h3>Names</h3>

{block}

  Inside a nested sequence the value of an entry has many names.

{table}

{demo}{seq range='40..50', one='sum', name='abc', store='klm', toData='xyz'}
  {$seq} {$range} {$one} {$sum} {$abc} {$klm} {$xyz}
{/seq}{/demo}

{/table}

{/block}

